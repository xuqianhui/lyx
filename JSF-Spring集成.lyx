#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ctex-article
\begin_preamble
\usepackage {layout}%输出页面布局
\usepackage {menukeys}
\usepackage {footnote} 
\makesavenoteenv {tabular}
\usepackage[bottom]{footmisc}
\usepackage {placeins}
\usepackage{scrextend}%labeling环境
\usepackage[inline]{enumitem}%内联列表
\usepackage{xcolor}
\usepackage{tasks}%水平列表
\usepackage{lettrine}%首字浮沉
\usepackage{alltt}%逐字文本
\usepackage{hyperref}
\usepackage{dirtree}
\usepackage{multicol}
\usepackage[style]{fncychap}
\usepackage{forest}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding utf8-plain
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
JSF - Spring集成
\end_layout

\begin_layout Standard
Spring提供了专门的DelegatingVariableResolver类，通过在JSF表达式中引用它们的bean名称来访问这些bean，将JSF和Spri
ng整合在一起。
\end_layout

\begin_layout Standard
在JSF中集成Spring依赖注入（IOC）功能需要执行以下步骤:
\end_layout

\begin_layout Section
添加DelegatingVariableResolver
\end_layout

\begin_layout Standard
在faces-config.xml中添加一个变量解析指向spring 的DelegatingVariableResolver类
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<faces-config>    
\end_layout

\begin_layout Plain Layout

  <application>    
\end_layout

\begin_layout Plain Layout

  <variable-resolver>       
\end_layout

\begin_layout Plain Layout

    org.springframework.web.jsf.DelegatingVariableResolver    
\end_layout

\begin_layout Plain Layout

  </variable-resolver>    
\end_layout

\begin_layout Plain Layout

</faces-config>
\end_layout

\end_inset


\end_layout

\begin_layout Section
添加监听器
\end_layout

\begin_layout Standard
在web.xml中添加由spring框架提供的ContextLoaderListener和RequestContextListener监听器
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<web-app>     
\end_layout

\begin_layout Plain Layout

  <listener>       
\end_layout

\begin_layout Plain Layout

    <listener-class>          
\end_layout

\begin_layout Plain Layout

      org.springframework.web.context.ContextLoaderListener       
\end_layout

\begin_layout Plain Layout

    </listener-class>    
\end_layout

\begin_layout Plain Layout

  </listener>        
\end_layout

\begin_layout Plain Layout

  <listener>       
\end_layout

\begin_layout Plain Layout

    <listener-class>          
\end_layout

\begin_layout Plain Layout

      org.springframework.web.context.request.RequestContextListener       
\end_layout

\begin_layout Plain Layout

    </listener-class>    
\end_layout

\begin_layout Plain Layout

  </listener>    
\end_layout

\begin_layout Plain Layout

</web-app>
\end_layout

\end_inset


\end_layout

\begin_layout Section
定义依赖关系
\end_layout

\begin_layout Standard
定义applicationContext.xml中的bean，用作托管bean中的依赖关系
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<beans>    
\end_layout

\begin_layout Plain Layout

  <bean id = "messageService"        
\end_layout

\begin_layout Plain Layout

    class = "com.tutorialspoint.test.MessageServiceImpl">       
\end_layout

\begin_layout Plain Layout

    <property name = "message" value = "Hello World!" />            
\end_layout

\begin_layout Plain Layout

  </bean> 
\end_layout

\begin_layout Plain Layout

</beans>
\end_layout

\end_inset


\end_layout

\begin_layout Section
添加依赖关系
\end_layout

\begin_layout Standard
DelegatingVariableResolver首先将值查找委托给JSF的默认解析器，然后再指向Spring的WebApplicationContext。这
样可以轻松地将依赖关系注入到JSF管理的bean中
\end_layout

\begin_layout Standard
注入基于依赖关系的messageService
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<faces-config>    
\end_layout

\begin_layout Plain Layout

  <managed-bean>       
\end_layout

\begin_layout Plain Layout

    <managed-bean-name>userData</managed-bean-name>      
\end_layout

\begin_layout Plain Layout

    <managed-bean-class>com.tutorialspoint.test.UserData</managed-bean-class>
       
\end_layout

\begin_layout Plain Layout

    <managed-bean-scope>request</managed-bean-scope>             
\end_layout

\begin_layout Plain Layout

    <managed-property>          
\end_layout

\begin_layout Plain Layout

      <property-name>messageService</property-name>          
\end_layout

\begin_layout Plain Layout

      <value>#{messageService}</value>       
\end_layout

\begin_layout Plain Layout

    </managed-property>    
\end_layout

\begin_layout Plain Layout

  </managed-bean>  
\end_layout

\begin_layout Plain Layout

</faces-config>
\end_layout

\end_inset


\end_layout

\begin_layout Section
使用依赖关系
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

//jsf managed bean 
\end_layout

\begin_layout Plain Layout

public class UserData {        
\end_layout

\begin_layout Plain Layout

  //spring managed dependency    
\end_layout

\begin_layout Plain Layout

  private MessageService messageService;
\end_layout

\begin_layout Plain Layout

  public void setMessageService(MessageService messageService) {       
\end_layout

\begin_layout Plain Layout

    this.messageService = messageService;    
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

  public String getGreetingMessage() {       
\end_layout

\begin_layout Plain Layout

    return messageService.getGreetingMessage();    
\end_layout

\begin_layout Plain Layout

  } 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
