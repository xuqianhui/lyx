#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ctex-article
\begin_preamble
\usepackage {layout}%输出页面布局
\usepackage {menukeys}
\usepackage {footnote} 
\makesavenoteenv {tabular}
\usepackage[bottom]{footmisc}
\usepackage {placeins}
\usepackage{scrextend}%labeling环境
\usepackage[inline]{enumitem}%内联列表
\usepackage{xcolor}
\usepackage{tasks}%水平列表
\usepackage{lettrine}%首字浮沉
\usepackage{alltt}%逐字文本
\usepackage{hyperref}
\usepackage{dirtree}
\usepackage{multicol}
\usepackage[style]{fncychap}
\usepackage{forest}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding utf8-plain
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
JSF概述
\end_layout

\begin_layout Section
配置JSF项目
\end_layout

\begin_layout Subsection
一次性注册JSF 2.2 JAR
\end_layout

\begin_layout Enumerate
从– https://javaserverfaces.java.net/download.html下载JSF 2.2 JAR
\end_layout

\begin_layout Enumerate
创建jsf库Window -Preferences - Java - Build Path -User Libraries- New
\end_layout

\begin_layout Enumerate
选择新创建的库指向JSF 2.2 JAR文件
\end_layout

\begin_layout Subsection
每一次用JSF 2.2创建动态项目
\end_layout

\begin_layout Standard
创建项目File - New - Project - Web -Dynamic Web Project 下一次可以使用 File- New -Dynamic
 Web Project
\end_layout

\begin_layout Standard
定义JSF 2.2的配置：创建项目然后添加JSF 2.2通过右击项目选择首选项，使用默认的源代码位置和web.xml
\begin_inset Newline newline
\end_inset

添加新的用户库，去掉把*.faces作为url的模式，添加*.jsf，去掉web.xml中auto-generated（由eclipse制作的包含许多复杂的项目(lo
calizationContext and ConfigureListener）缺少很多有价值的设置，不能设置任何欢迎页面的url）
\end_layout

\begin_layout Section
测试标签
\end_layout

\begin_layout Standard
验证 jsf 标记是否被呈现为 html 元素。 这表明该项目已正确设置: 它表明项目包含JSF JAR 在正确的位置，以及web.xml中的主要条目
\end_layout

\begin_layout Standard
使用标准的JSF .xhtml页面(“facelets”) ，文件使用.xhtml，但是url使用.jsf
\end_layout

\begin_layout Standard
检查h:commandButton被表示成提交按钮，检查h:inputText被表示成文本域
\end_layout

\begin_layout Section
导航
\end_layout

\begin_layout Standard
使用 @managedbean 声明 java 类
\end_layout

\begin_layout Standard
使用h:commandButton按钮的action属性来指定不带参数并返回字符串的方法，返回的字符串是页面去掉后缀的基名称，由于默认情况下,
 jsf 使用转发, 而不是重定向, 结果页的名称未显示在 url 中。
\end_layout

\begin_layout Section
用bean属性表示表单数据
\end_layout

\begin_layout Standard
用bean的属性表示输入元素，当显示窗体时, 将调用 getter（getName），如果 结果为非空, 即初始值为文本。提交表单时, 文本值将传递给sette
r（setName）方法
\end_layout

\begin_layout Standard
注意文本框引用的是bean的属性，而按钮指的是确切的方法的名称，对于缺少的数据使用单独的错误页不是一个好方法。 相反, 应该重新显示输入窗体,
 并使用错误消息标记丢失的数据。
\end_layout

\begin_layout Section
应用业务逻辑
\end_layout

\begin_layout Standard
结果页面通常显示的不仅仅是用户输入的数据， 它通常还显示从用户数据派生的数据 。例如： 用户输入银行帐号并显示帐户余额。
\end_layout

\begin_layout Standard
使用独立的方法查找派生数据：不要直接在操作控制器方法中计算派生数据, 而是使用单独的方法
\end_layout

\begin_layout Standard
简单输入简单输出：不返回找到数据的Hibernate对象或任何细节，返回一个java对象来表示结果
\end_layout

\begin_layout Standard
编写接口：制作一个像CustomerLookupService一样的接口并使用这种类型，防止依赖某种具体类型
\end_layout

\begin_layout Standard
有时使用依赖注入：更改了接口的具体实现时候，主类什么都没有改变，托管 bean将变量声明为接口类型, 而不是具体类型。这意味着更改具体类型的实现时,
 不必更改 操作控制器方法或输出页中的任何内容，使用依赖注入从 bean 中设置具体类型, 从而更改具体类型 意味着更改单独的 bean, 但不更改主管理
 bean 中的任何内容。 
\end_layout

\begin_layout Section
页面模板
\end_layout

\begin_layout Standard
如果在多个位置使用相同的内容，将内容放在单独的文件，并把它用ui:include包含起来
\end_layout

\begin_layout Standard
如果有多个页面具有相似的布局，可以制作模板文件
\end_layout

\begin_layout Section
验证输入
\end_layout

\begin_layout Standard
在输入表单中放置标记以检查数据是否格式正确，如果不正确则显示错误信息。
\end_layout

\begin_layout Standard
h: inputText 中的属性：
\end_layout

\begin_layout Standard
requiredMessage:对于完全丢失数据
\end_layout

\begin_layout Standard
converterMessage:对于错误类型的数据 ·
\end_layout

\begin_layout Standard
validatorMessage: 对于从 f: validateblah 测试失败的数据
\end_layout

\begin_layout Standard
<h:message for="id-of-textfield"/>：用于输出错误消息
\end_layout

\end_body
\end_document
